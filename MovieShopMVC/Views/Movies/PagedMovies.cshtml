@* @model ApplicationCore.Models.PagedResultSet<ApplicationCore.Models.MovieCardModel>

<div class="rounded">
    <div class="container-fluid bg-light">
        <div class="row">
            @foreach (var movie in Model.Data)
            {
                <div class="col-6 col-lg-3 col-sm-4 col-xl-2">
                    <partial name="_MovieCard" model="movie"/>                   
                </div>
            }
        </div>
    </div>
</div>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}


<nav aria-label="Page navigation example">
    <ul class="pagination">        

        @for(var i = 0; i < Model.TotalPages; i++)
        {
            <li class="page-item">
                <a class="page-link" href="#">
                    @i   
                </a>
            </li>
        }
    </ul>
</nav>  *@

@model ApplicationCore.Models.PagedResultSet<ApplicationCore.Models.MovieCardModel>

<div class="rounded">
    <div class="container-fluid bg-light">
        <div class="row">
            @foreach (var movie in Model.Data)
            {
                <div class="col-6 col-lg-3 col-sm-4 col-xl-2">
                    <partial name="_MovieCard" model="movie" />
                </div>
            }
        </div>
    </div>
</div>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var genreId = Model.GenreId; // Ensure you pass GenreId
}

<nav aria-label="Page navigation example">
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item @prevDisabled">
                <a class="page-link" href="@Url.Action("Genres", "Movies", new { id = genreId, pageNumber = Model.PageIndex - 1, pageSize = Model.PageSize })">Previous</a>
            </li>
        }

        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                <a class="page-link" href="@Url.Action("Genres", "Movies", new { id = genreId, pageNumber = i, pageSize = Model.PageSize })">
                    @i
                </a>
            </li>
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item @nextDisabled">
                <a class="page-link" href="@Url.Action("Genres", "Movies", new { id = genreId, pageNumber = Model.PageIndex + 1, pageSize = Model.PageSize })">Next</a>
            </li>
        }
    </ul>
</nav>
